{"version":3,"file":"VrxToggle.stories-26580bd0.js","sources":["../../src/components/VrxToggle/VrxToggle.vue"],"sourcesContent":["<template>\n  <label data-testid=\"vrx-toggle\" class=\"relative inline-flex items-center cursor-pointer\">\n    <input type=\"checkbox\" :checked=\"toggle\" class=\"sr-only peer\" @change=\"toggleClick\" :disabled=\"disabled\">\n    <span data-testid=\"vrx-toggle-content\" :class=\"style.toggle\"></span>\n    <span data-testid=\"vrx-toggle-label\" class=\"ml-3 text-sm font-medium\" :class=\"style.label\">{{ label }}</span>\n  </label>\n</template>\n\n<script setup lang=\"ts\">\nimport {ComponentVariant, toggleStyle} from \"@/components/styles.ts\";\nimport {computed, ref} from \"vue\";\n  const props = withDefaults(defineProps<{\n    size?: 'sm' | 'md' | 'lg',\n    variant?: ComponentVariant,\n    label?: string,\n    disabled?: boolean,\n    modelValue?: boolean,\n  }>(),{\n    size: 'md',\n    variant: 'default',\n    label: '',\n    modelValue: false,\n    disabled: false,\n  })\n\n  const emit = defineEmits(['update:modelValue'])\n  const toggle = ref(props.modelValue as boolean);\n  const toggleClick = () => {\n    toggle.value = !toggle.value;\n    emit('update:modelValue', toggle.value);\n  }\n\nconst style = computed(() => {\n  return toggleStyle(props.variant, props.size);\n})\n</script>\n\n<style scoped>\n\n</style>"],"names":["toggle","ref","props","toggleClick","emit","style","computed","toggleStyle"],"mappings":"6gBA0BQA,EAASC,EAAIC,EAAM,UAAqB,EACxCC,EAAc,IAAM,CACjBH,EAAA,MAAQ,CAACA,EAAO,MAClBI,EAAA,oBAAqBJ,EAAO,KAAK,CAAA,EAGpCK,EAAQC,EAAS,IACdC,EAAYL,EAAM,QAASA,EAAM,IAAI,CAC7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}