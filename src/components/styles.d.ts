import { IconLibraryType } from '../components/VrxIcon/IconLibrary.ts';
export declare const theme: {
    [x: string]: any;
    screens?: import("tailwindcss/types/config.js").ScreensConfig | undefined;
    supports?: Record<string, string> | undefined;
    data?: Record<string, string> | undefined;
    colors?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    spacing?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    container?: Partial<{
        screens: import("tailwindcss/types/config.js").ScreensConfig;
        center: boolean;
        padding: string | Record<string, string>;
    }> | undefined;
    inset?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    zIndex?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    order?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridColumn?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridColumnStart?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridColumnEnd?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridRow?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridRowStart?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridRowEnd?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    margin?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    aspectRatio?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    height?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    maxHeight?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    minHeight?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    width?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    maxWidth?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    minWidth?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    flex?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    flexShrink?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    flexGrow?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    flexBasis?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    borderSpacing?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    transformOrigin?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    translate?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    rotate?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    skew?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    scale?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    animation?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    keyframes?: import("tailwindcss/types/config.js").KeyValuePair<string, import("tailwindcss/types/config.js").KeyValuePair<string, import("tailwindcss/types/config.js").KeyValuePair<string, string>>> | undefined;
    cursor?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    scrollMargin?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    scrollPadding?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    listStyleType?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    columns?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridAutoColumns?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridAutoRows?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridTemplateColumns?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gridTemplateRows?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gap?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    space?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    divideWidth?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    divideColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    divideOpacity?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    borderRadius?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    borderWidth?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    borderColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    borderOpacity?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backgroundColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    backgroundOpacity?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backgroundImage?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    gradientColorStops?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    backgroundSize?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backgroundPosition?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    fill?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    stroke?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    strokeWidth?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    objectPosition?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    padding?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    textIndent?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    fontFamily?: import("tailwindcss/types/config.js").KeyValuePair<string, string | string[] | [fontFamily: string | string[], configuration: Partial<{
        fontFeatureSettings: string;
        fontVariationSettings: string;
    }>]> | undefined;
    fontSize?: import("tailwindcss/types/config.js").KeyValuePair<string, string | [fontSize: string, lineHeight: string] | [fontSize: string, configuration: Partial<{
        lineHeight: string;
        letterSpacing: string;
        fontWeight: string | number;
    }>]> | undefined;
    fontWeight?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    lineHeight?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    letterSpacing?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    textColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    textOpacity?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    textDecorationColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    textDecorationThickness?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    textUnderlineOffset?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    placeholderColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    placeholderOpacity?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    caretColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    accentColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    opacity?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    boxShadow?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    boxShadowColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    outlineWidth?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    outlineOffset?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    outlineColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    ringWidth?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    ringColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    ringOpacity?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    ringOffsetWidth?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    ringOffsetColor?: import("tailwindcss/types/config.js").RecursiveKeyValuePair<string, string> | undefined;
    blur?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    brightness?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    contrast?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    dropShadow?: import("tailwindcss/types/config.js").KeyValuePair<string, string | string[]> | undefined;
    grayscale?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    hueRotate?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    invert?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    saturate?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    sepia?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backdropBlur?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backdropBrightness?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backdropContrast?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backdropGrayscale?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backdropHueRotate?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backdropInvert?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backdropOpacity?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backdropSaturate?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    backdropSepia?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    transitionProperty?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    transitionTimingFunction?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    transitionDelay?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    transitionDuration?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    willChange?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    content?: import("tailwindcss/types/config.js").KeyValuePair<string, string> | undefined;
    extend?: Partial<import("tailwindcss/types/config.js").ThemeConfig> | undefined;
} | undefined;
export type ComponentVariant = 'default' | 'alternative' | 'dark' | 'light' | 'green' | 'red' | 'yellow' | 'purple';
export declare function inputStyles(invalid: boolean, disabled: boolean, iconType?: IconLibraryType): {
    input: string;
    label: string;
    helperText: string;
    icon: string;
};
export declare function selectStyles(disabled: boolean, invalid: boolean, variant: string): {
    select: string;
    label: string;
    helperText: string;
    icon: string;
    selected: any;
    selectedIcon: any;
    dropdown: string;
    dropdownItem: string;
    placeholder: string;
};
export declare function toggleStyle(variant: ComponentVariant, size: 'sm' | 'md' | 'lg', disabled: boolean): {
    toggle: string;
    label: string;
};
export declare function navbarButtonStyle(selected: boolean, hasChildren: boolean): {
    navbarButton: string;
    dropdownStyle: {
        mainContainer: string;
        leftPanel: string;
        rightPanel: string;
    };
};
